.m-input {
    $p : &;
    position: relative;
    width: 100%;
    display: -ms-flexbox;
    display: flex;
    flex-direction: row;
    position: relative;
    flex-wrap: wrap;
    justify-content: space-between;
    font-size: calculateRem(16px);
    margin: calculateEm(15px, 16px) 0;
    padding: 0;
    align-items: center;
    -ms-flex-pack: justify;
  
    input:-webkit-autofill,
    input:-webkit-autofill:hover,
    input:-webkit-autofill:focus
    textarea:-webkit-autofill,
    textarea:-webkit-autofill:hover
    textarea:-webkit-autofill:focus,
    select:-webkit-autofill,
    select:-webkit-autofill:hover,
    select:-webkit-autofill:focus {
      -webkit-text-fill-color: $text-color;
      -webkit-box-shadow: 0 0 0px 1000px $white inset;
    }
  
    label {
      margin: calculateEm(5px, 20px) 0;
      font-size: calculateRem(20px);
      color: $text-color;
      width: 100%;
      text-align: left;
      padding: 0 calculateEm(10px, 20px);
      @include media-breakpoint-up(sm) {
        padding: 0 calculateEm(20px, 20px);
      }
      @include media-breakpoint-up(md) {
        padding: 0;
      }
    }
  
    .a-error-message {
      margin: 0;
      padding: 0;
      width: 100%;
      order: 3;
      color: $error-message;
      font-size: calculateRem(16px);
      line-height: 1;
      @include media-breakpoint-up(sm) {
        position: absolute;
        bottom: 0;
        right: calculateEm(10px, 16px);
        padding: 0;
        width: auto;
        @include translate(0, 50%);
      }
      @include media-breakpoint-up(md) {
        right: calculateEm(0px, 16px);
      }
    }    
  
    &.-input-text, &.-input-password, &.-input-email, &.-input-number {

      padding: 0 0 calculateEm(15px, 16px);
  
      input[type='text'], input[type='password'], input[type='email'], input[type='number'] {
        outline: none;
        height: calculateEm(40px, 16px);
        width: 100%;
        font-size: calculateRem(16px);
        line-height: 1.5;
        border: none;
        border-bottom: 1px solid $input-border;
        border-radius: calculateEm(0px, 16px);
        margin: 0;
        padding: calculateEm(5px, 16px) calculateEm(20px, 16px);
        order: 3;
        background: $white;
        font-family: $font-default;
        @include transition(all 0.15s linear 0s);
  
        &:focus {
          border-color: $input-border-active;
          background: $input-background-active;
        }
      }
    }
  
    &.-input-textarea {
      align-items: normal;
  
      .a-error-message {
        position: relative;
        top: auto;
        left: auto;
        @include translate(0, 0);
  
        @include media-breakpoint-up(sm){
          position: absolute;
          bottom: auto;
          top: calculateEm(38px, 12px);
          right: calculateEm(20px, 12px);
        }
        @include media-breakpoint-up(md) {
          top: calculateEm(5px, 12px);
          right: calculateEm(50px, 12px);
        }
      }
  
      textarea {
        outline: none;
        height: calculateEm(136px, 12px);
        width: 100%;
        font-size: calculateRem(12px);
        line-height: 1.4;
        border: 1px solid $input-border;
        border-radius: calculateEm(10px, 12px);
        margin: 0;
        padding: calculateEm(5px, 12px) calculateEm(20px, 12px);
        resize: none;
        order: 3;
        background: $white;
        @include transition(all 0.15s linear 0s);
  
        @include media-breakpoint-up(md) {
          max-width: calculateEm(370px, 12px);
        }
  
        &:focus {
          border-color: $input-border-active;
        }
      }
  
    }
  
    &.-input-checkbox {

      margin: calculateEm(35px, 16px) 0 0;
      padding-bottom: calculateEm(25px, 16px); 
  
      label {
        margin: 0;
        padding: 0 0 0 calculateEm(35px, 16px);
        font-size: calculateRem(16px);
        min-height: calculateEm(20px, 16px);
        text-align: left;
        max-width: 100%;
        cursor: pointer;

        p {
          margin: calculateEm(20px, 16px) 0;
          font-size: calculateRem(16px);

          &:first-child {
            margin-top: 0;
          }
        }
  
       
  
        &:before {
          content: "";
          position: absolute;
          top: 0;
          left: 0;
          border: 1px solid $primary-color;
          background: $white;
          width: 22px;
          height: 22px;
          box-sizing: border-box;

          @include media-breakpoint-up(xl) {
            width: 24px;
            height: 24px;
          }
        }
  
        &:after {
          content: "";
          position: absolute;
          top: 11px;
          left: 11px;
          width: 0;
          height: 0;
          background: $primary-color;
          @include translate(-50%, -50%);
          @include transition(all 0.15s linear 0s);

          @include media-breakpoint-up(xl) {
            top: 12px;
            left: 12px;
          }
        }
  
      }
  
      input[type="checkbox"] {
        opacity: 0;
        position: absolute;
        height: 0;
        width: 0;
        z-index: -1;
  
        &:checked ~ label {
  
          &:after {
            width: 16px;
            height: 16px;
            opacity: 1;

            @include media-breakpoint-up(xl) {
              width: 18px;
              height: 18px;
            }
          }
        }
      }
  
      &.-input-error {
        label:before {
          border-color: $error-border;
        }
      }
  
      .a-error-message {
        position: absolute;
        left: 0;
        top: auto;
        bottom: 0;
        width: 100%;
        max-width: 100%;
        margin: 0;
        font-size: calculateRem(16px);
        padding: 0 0 0 calculateEm(35px, 16px);        
      }

    }
  
    &.-input-radio {
  
      label {
        margin: 0;
        padding: 0 0 0 calculateEm(35px, 20px);
        font-size: calculateRem(20px);
        text-align: left;
        min-height: calculateEm(20px, 20px);
        max-width: 100%;
        cursor: pointer;
  
        @include media-breakpoint-up(sm) {
          padding-left: calculateEm(30px, 12px)
        }
  
        &:before {
          content: "";
          position: absolute;
          top: 0;
          left: 0;
          border: 1px solid $primary-color;
          background: $white;
          width: 22px;
          height: 22px;
          border-radius: 50%;
          box-sizing: border-box;

          @include media-breakpoint-up(xl) {
            width: 24px;
            height: 24px;
          }
        }
  
        &:after {
          content: "";
          position: absolute;
          top: 11px;
          left: 11px;
          width: 0;
          height: 0;
          background: $primary-color;
          border-radius: 50%;
          @include translate(-50%, -50%);
          @include transition(all 0.15s linear 0s);

          @include media-breakpoint-up(xl) {
            top: 12px;
            left: 12px;
          }
        }
      }
  
      input[type="radio"] {
        opacity: 0;
        position: absolute;
        height: 0;
        width: 0;
        z-index: -1;
  
        &:checked ~ label {
          &:after {
            width: 16px;
            height: 16px;
            opacity: 1;

            @include media-breakpoint-up(xl) {
              width: 18px;
              height: 18px;
            }
          }
        }
      }
  
      &.-input-error {
        label:before {
          border-color: $error-border;
        }
      }
  
      .a-error-message {
        position: relative;
        left: 0;
        top: auto;
        bottom: auto;
        @include translate(0, 0);
        width: 100%;
        max-width: 100%;
        padding: 0 0 0 calculateEm(35px, 12px);
  
        @include media-breakpoint-up(sm) {
          padding: 0 0 0 calculateEm(50px, 12px);
        }
      }
  
    }
  
    &.-input-select {
  
      .a-error-message {
        @include media-breakpoint-up(sm) {
          right: calculateEm(40px, 12px);
        }
        @include media-breakpoint-up(md) {
          right: calculateEm(65px, 12px);
        }
      }
  
      //@extend .icon-down;
      &:before {
        font-family: "icons";
        font-style: normal;
        font-weight: normal;
        speak: none;
        display: inline-block;
        text-decoration: inherit;
        width: calculateEm(20px, 12px);
        margin-right: .4em;
        text-align: center;
        font-variant: normal;
        text-transform: none;
        margin-left: .4em;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        position: absolute;
        top: calculateEm(32px, 16px);
        right: calculateEm(5px, 16px);
        height: calculateEm(36px, 16px);
        line-height: calculateEm(36px, 16px);
        pointer-events: none;
        color: $primary-color;
  
        @include media-breakpoint-up(md) {
          top: 1px;
          right: calculateEm(30px, 16px);
        }
      }
  
      select {
        outline: none;
        -webkit-appearance: none;
        -webkit-appearance: none;
        -moz-appearance: none;
        -ms-appearance: none;
        appearance: none;
        height: calculateEm(36px, 12px);
        width: 100%;
        font-size: calculateRem(12px);
        border: 1px solid $input-border;
        border-radius: calculateEm(18px, 12px);
        margin: 0;
        padding: 0 calculateEm(20px, 12px);
        background: transparent;
        order: 3;
        @include transition(all 0.15s linear 0s);
  
        &::-ms-expand {
          display: none;
        }
  
        &:focus {
          border-color: $input-border-active;
          outline: none;
        }
  
        &:-moz-focusring {
          color: transparent;
          text-shadow: 0 0 0 #000;
        }
  
        &:active {
          outline: none;
        }
  
        @include media-breakpoint-up(md) {
          max-width: calculateEm(370px, 12px);
        }
      }
    }
  
    &.-input-error {
      input[type='text'], input[type='password'], input[type='email'], input[type='number'], textarea, select {
        border-color: $error-border;
  
        &:focus {
          border-color: $error-border;
        }
      }
    }
  
  }